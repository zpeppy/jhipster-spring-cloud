# 日志配置
logging:
  level:
    ROOT: DEBUG
    io.github.jhipster: DEBUG
    com.example.gateway: DEBUG
    com.alibaba.nacos: INFO

# eureka 配置
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    service-url:
#      defaultZone: http://admin:${jhipster.registry.password}@registry:8761/eureka/

spring:
  profiles:
    active: dev
    include:
      - swagger
      # Uncomment to activate TLS for the dev profile
      #- tls
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev, faker
    url: jdbc:mysql://mysql:3306/r2gateway?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
  mail:
    host: mail
    port: 25
    username:
    password:
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  r2dbc:
    url: r2dbc:mysql://mysql:3306/r2gateway?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true
    username: root
    password: root
  thymeleaf:
    cache: false
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://zipkin:9411
    enabled: true
    locator:
      discovery:
        enabled: true

server:
  port: 8080

# jhipster 配置, JHipsterProperties 配置属性类会读取下面配置值
jhipster:
  gateway:
    rate-limiting:
      enabled: false
      limit: 100000
      duration-in-seconds: 3600
  # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
  cors:
    allowed-origins: '*'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: YjlkODdjNzk3ZDY2MDMxNWZkZDg0MTc2ZmFlYjk5OGY5NWMzNGE2OGJjYWExNjVkNzQxMTAxMmQxYTAzZjg2ZTY4NTFhYmVlNDc0OGY0NzIxZTQ0MzdjYWFmZTUyMjEzNjRhYThmNTFmODZiYjMzZWJlOGExMTk0MTE3ZmI4N2E=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
    # 客户端模式
    client-authorization:
      access-token-uri: http://uaa/oauth/token
      token-service-id: uaa
      client-id: internal
      client-secret: internal
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://mail:8080
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: logstash
      port: 5000
      queue-size: 512
  audit-events:
    retention-period: 30 # Number of days before audit events are deleted.

# uaa oauth2 配置
oauth2:
  signature-verification:
    public-key-endpoint-uri: http://uaa/oauth/token_key
    #ttl for public keys to verify JWT tokens (in ms)
    ttl: 3600000
    #max. rate at which public keys will be fetched (in ms)
    public-key-refresh-rate-limit: 10000
  # 用户名密码模式
  web-client-configuration:
    #keep in sync with UAA configuration
    client-id: web_app
    secret: changeit
    # Controls session expiration due to inactivity (ignored for remember-me).
    # Negative values disable session inactivity expiration.
    session-timeout-in-seconds: 1800

# ApplicationProperties 配置类会获取 application 下配置值
application:
  useUaa: true # 使用 uaa 进行鉴权