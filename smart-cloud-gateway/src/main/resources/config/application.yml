# eureka 配置
#eureka:
#  client:
#    enabled: true
#    healthcheck:
#      enabled: true
#    fetch-registry: true
#    register-with-eureka: true
#    instance-info-replication-interval-seconds: 10
#    registry-fetch-interval-seconds: 10
#  instance:
#    appname: gateway
#    instanceId: gateway:${spring.application.instance-id:${random.value}}
#    lease-renewal-interval-in-seconds: 5
#    lease-expiration-duration-in-seconds: 10
#    status-page-url-path: ${management.endpoints.web.base-path}/info
#    health-check-url-path: ${management.endpoints.web.base-path}/health
#    metadata-map:
#      zone: primary # This is needed for the load balancer
#      profile: ${spring.profiles.active}
#      version: #project.version#
#      git-version: ${git.commit.id.describe:}
#      git-commit: ${git.commit.id.abbrev:}
#      git-branch: ${git.branch:}

# ribbon 配置
#ribbon:
#  eureka:
#    enabled: true

# zuul 配置
zuul: # those values must be configured depending on the application specific needs
  sensitive-headers: Cookie,Set-Cookie
  host:
    max-total-connections: 1000
    max-per-route-connections: 100
  prefix: /gateway
  semaphore:
    max-semaphores: 500

# hystrix 配置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

# management 配置
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: [ 'configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump' ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: gateway
  jmx:
    enabled: false
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none # 默认不自动创建表
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
  task:
    execution:
      thread-name-prefix: gateway-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: gateway-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  cloud:
    # nacos 注册中心
    nacos:
      discovery:
        server-addr: nacos:8848
        username: nacos
        password: nacos
        namespace: public
        group: DEFAULT_GROUP

# oauth2 客户端配置, 方便对接其他 oauth2 服务端
#security:
#  oauth2:
#    client:
#      access-token-uri: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/token
#      user-authorization-uri: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/auth
#      client-id: web_app
#      client-secret: web_app
#      scope: openid profile email
#    resource:
#      filter-order: 3
#      user-info-uri: http://localhost:9080/auth/realms/jhipster/protocol/openid-connect/userinfo

server:
  servlet:
    session:
      cookie:
        http-only: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# jhipster 配置
jhipster:
  clientApp:
    name: 'gatewayApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #     allowed-origins: "*"
  #     allowed-methods: "*"
  #     allowed-headers: "*"
  #     exposed-headers: "Authorization,Link,X-Total-Count"
  #     allow-credentials: true
  #     max-age: 1800
#  mail:
#    from: gateway@localhost
#  swagger:
#    default-include-pattern: /api/.*
#    title: gateway API
#    description: gateway API documentation
#    version: 0.0.1
#    terms-of-service-url:
#    contact-name:
#    contact-url:
#    contact-email:
#    license: unlicensed
#    license-url:

# ApplicationProperties 配置类会获取 application 下配置值
# application:
